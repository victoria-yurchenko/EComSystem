version: '3.9'
services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Strong@Passw0rd"
      ACCEPT_EULA: "Y"
    networks:
      - app_network

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    depends_on:
      - sqlserver
    networks:
      - app_network
    command: "bash -c '/wait-for-it.sh sqlserver:1433 -t 60 && dotnet ef database update --project Infrastructure/Infrastructure.csproj --startup-project Presentation/Presentation.csproj --connection \"Server=sqlserver,1433;Database=SubscriptionDb;User Id=sa;Password=Strong@Passw0rd;TrustServerCertificate=true;\" && echo done'"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=SubscriptionDb;User Id=sa;Password=Strong@Passw0rd;TrustServerCertificate=true;"
    depends_on:
      - sqlserver
      - migrations
    networks:
      - app_network
    volumes:
      - data-protection-keys:/root/.aspnet/DataProtection-Keys
    entrypoint: ["dotnet", "Presentation.dll"]

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network
    # dev mode
    volumes:
      - ./client:/app
      - /app/node_modules
      - ./jsconfig.json:/app/jsconfig.json:ro
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    command: ["npm", "start"]

networks:
  app_network:

volumes:
  data-protection-keys:
